@Composable
fun QuizApp(){
    var difficulty by remember { mutableStateOf("") }
    var questions by remember { mutableStateOf(emptyList<Question>()) }
    var currentQuestion by remember { mutableIntStateOf(0) }
    var selectedAnswer by remember { mutableStateOf("") }
    var score by remember { mutableIntStateOf(0) }
    var quizFinished by remember { mutableStateOf(false) }
    var enabledButton by remember { mutableStateOf(false) }

    fun loadQuestions(difficulty: String) {
        questions = when (difficulty) {
            "Легкий" -> listOf(
                Question("Сколько будет 2 + 2?", listOf("3", "4", "5"), "4"),
                Question("Какой цвет у неба?", listOf("Зеленый", "Синий", "Красный"), "Синий")
            )
            "Нормальный" -> listOf(
                Question("Какая страна самая крупная?", listOf("Китай", "Россия", "США"), "Россия"),
                Question("Какой сейчас год?", listOf("2025", "2000", "2008"), "2025")
            )
            "Сложный" -> listOf(
                Question("Кто написал 'Белый клык'?", listOf("Jack London", "Лев Толстой", "Чехов"), "Jack London"),
                Question("Какое место занимает Земля в Солнечной системе?", listOf("3", "4", "5"), "3")
            )
            else -> emptyList()
        }
        currentQuestion = 0
        score = 0
        selectedAnswer = ""
        quizFinished = false
    }

    Column(modifier = Modifier.fillMaxSize().padding(16.dp), verticalArrangement = Arrangement.Center, horizontalAlignment = Alignment.CenterHorizontally) {
        if (difficulty.isEmpty()) {
            Text(text = "Выберите сложность")
            Spacer(modifier = Modifier.height(12.dp))

            Button(onClick = { difficulty = "Легкий"; loadQuestions("Легкий") }) {
                Text(text = "Легкий")
            }
            Button(onClick = { difficulty = "Нормальный"; loadQuestions("Нормальный") }) {
                Text(text = "Нормальный")
            }
            Button(onClick = { difficulty = "Сложный"; loadQuestions("Сложный") }) {
                Text(text = "Сложный")
            }
        } else if (!quizFinished) {
            Text(text = "Вопрос: ${questions[currentQuestion].text}")
            Spacer(modifier = Modifier.height(12.dp))

            questions[currentQuestion].options.forEach { option ->
                Row(modifier = Modifier.fillMaxWidth(), verticalAlignment = Alignment.CenterVertically) {
                    RadioButton(
                        selected = selectedAnswer == option,
                        onClick = {
                            selectedAnswer = option
                            enabledButton = true
                        }
                    )
                    Text(text = option)
                }
            }

            Button(onClick = {
                if (selectedAnswer == questions[currentQuestion].correctAnswer) {
                    score++
                }
                if (currentQuestion < questions.size - 1)
                    currentQuestion++
                else
                    quizFinished = true

                selectedAnswer = ""
                enabledButton = false
            }, enabled = enabledButton) {
                Text(text = if (currentQuestion < questions.size - 1) "Следующий вопрос" else "Закончить")
            }
        } else {
            Text(text = "Ваш результат: $score/${questions.size}")
            Button(onClick = {
                difficulty = ""
                questions = emptyList()
            }) {
                Text(text = "Перезапустить квиз")
            }
        }
    }
}

data class Question(val text: String, val options: List<String>, val correctAnswer: String)
